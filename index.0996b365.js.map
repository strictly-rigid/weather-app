{"mappings":"YAAO,IAAMA,EAAO,CAClBC,aAAcC,SAASC,cAAc,kBACrCC,gBAAiBF,SAASC,cAAc,qBACxCE,KAAMH,SAASC,cAAc,gBAC7BG,MAAOJ,SAASC,cAAc,SAC9BI,UAAWL,SAASC,cAAc,eAClCK,QAASN,SAASC,cAAc,aCDlCH,EAAKO,UAAUE,iBAAiB,SAEhC,SAAoBC,GAClBA,EAAMC,iBACN,IAAMC,EAAWZ,EAAKM,MAAMO,MAAMC,OAAOC,cAIzC,OAHAC,QAAQC,IAAIL,GAsCd,WACEZ,EAAKC,aAAaiB,YAAc,GAChClB,EAAKI,gBAAgBc,YAAc,GACnClB,EAAKQ,QAAQW,UAAY,E,CAxCzBC,GAEOC,MAAM,GAAiCC,OAXjC,+BAWY,uBAAkCA,OAV7C,kCAUwC,OAAcA,OAATV,EAAS,YACjEW,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GAIJ,OAHA1B,EAAKC,aAAaiB,YAAcQ,EAAKd,SAASe,KAC9C3B,EAAKI,gBAAgBc,YAAcQ,EAAKd,SAASgB,QACjDZ,QAAQC,IAAIS,GACLA,EAAKG,SAASC,W,IAEtBP,MAAK,SAAAQ,GAEJ,OADAf,QAAQC,IAAIc,GACLA,EACJC,KAAI,SAAAC,GACH,MAAO,6DAKAX,OAHSW,EAAKC,KAAK,wEAMNZ,OAHbW,EAAKE,IAAIC,UAAUC,KAAK,gFAIXf,OADAW,EAAKE,IAAIG,UAAU,yCACAhB,OAAnBW,EAAKE,IAAII,UAAU,wC,IAIxCC,KAAK,G,IAETjB,MAAK,SAAAkB,GACJzC,EAAKQ,QAAQkC,mBAAmB,YAAaD,E,IAE9CE,OAAM,SAAAC,GACL5B,QAAQC,IAAI2B,E","sources":["src/js/refs.js","src/js/scripts.js"],"sourcesContent":["export const refs = {\n  locationCity: document.querySelector('.location-city'),\n  locationCountry: document.querySelector('.location-country'),\n  form: document.querySelector('.search-form'),\n  input: document.querySelector('input'),\n  btnSubmit: document.querySelector('.getweather'),\n  wrapper: document.querySelector('.wrapper'),\n};\n","import { refs } from './refs';\n\nlet BASE_URL = 'http://api.weatherapi.com/v1';\nconst API_KEY = 'dad5bd8d50304f51883165435232406';\n\nrefs.btnSubmit.addEventListener('click', getWeather);\n\nfunction getWeather(event) {\n  event.preventDefault();\n  const location = refs.input.value.trim().toLowerCase();\n  console.log(location);\n  clearWeather();\n\n  return fetch(`${BASE_URL}/forecast.json?key=${API_KEY}&q=${location}&days=7`)\n    .then(response => response.json())\n    .then(data => {\n      refs.locationCity.textContent = data.location.name;\n      refs.locationCountry.textContent = data.location.country;\n      console.log(data);\n      return data.forecast.forecastday;\n    })\n    .then(workingData => {\n      console.log(workingData);\n      return workingData\n        .map(item => {\n          return `\n        <div class=\"day_item\">\n        <p class=\"date\">${item.date}</p>\n        <img\n          class=\"weather_image\"\n          src=\"${item.day.condition.icon}\"\n          alt=\"weather picture\"\n        />\n        <p class=\"min_temp\">${item.day.mintemp_c} °C</p>\n        <p class=\"max_temp\">${item.day.maxtemp_c} °C</p>\n        </div>\n            `;\n        })\n        .join('');\n    })\n    .then(markup => {\n      refs.wrapper.insertAdjacentHTML('beforeend', markup);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfunction clearWeather() {\n  refs.locationCity.textContent = '';\n  refs.locationCountry.textContent = '';\n  refs.wrapper.innerHTML = '';\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","locationCity","document","querySelector","locationCountry","form","input","btnSubmit","wrapper","addEventListener","event","preventDefault","location","value","trim","toLowerCase","console","log","textContent","innerHTML","$88b779ed2e70f50d$var$clearWeather","fetch","concat","then","response","json","data","name","country","forecast","forecastday","workingData","map","item","date","day","condition","icon","mintemp_c","maxtemp_c","join","markup","insertAdjacentHTML","catch","error"],"version":3,"file":"index.0996b365.js.map"}